# and their Format
series_and_movies <- as_tibble(filter(prem_year %>%
group_by(Service, Premiere_Year = strtoi(Premiere_Year), Format) %>%
summarise(Entries = length(Service)), Format == "Film" | Format == "Series"))
series_and_movies
percentage_of_series <- function(dataframe) {
series_percentages <- data.frame(Service = c(), Premiere_Year = c(), Series_Percentage = c())
services <- c("Netflix", "Amazon Prime Video", "Hulu", "Disney+")
for (service in services) {
service_rows <- filter(dataframe, Service == service)
for (year in unique(pull(service_rows, Premiere_Year))) {
nr_series <- sum(pull(filter(service_rows, Format == "Series", Premiere_Year == year), Entries))
print(paste("Nr. series:", nr_series))
nr_films <- sum(pull(filter(service_rows, Format == "Film", Premiere_Year == year), Entries))
print(paste("Nr. films:", nr_films))
print(ifelse(nr_series == 0,
ifelse(nr_films == 0,
50,
0),
ifelse(nr_films == 0,
100,
nr_series / nr_series + nr_films)))
series_percentages <- rbind(series_percentages,
data.frame(as.factor(c(service)),c(year),c(ifelse(nr_series == 0,
ifelse(nr_films == 0,
50,
0),
ifelse(nr_films == 0,
100,
nr_series / (nr_series + nr_films) * 100)))))
}
}
return(series_percentages)
}
percentage_of_series(series_and_movies)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Film"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Film") +
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Series"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
scale_colour_manual(values = original_colors)
service_netflix <- filter(prem_year, Service != "Netflix")
service_amazon <- filter(prem_year, Service != "Amazon Prime Video")
service_hulu <- filter(prem_year, Service != "Hulu")
service_disney <- filter(prem_year, Service != "Disney+")
# Creating a data frame that groups all the entries by their Service, Release Year
# and their Format
series_and_movies <- as_tibble(filter(prem_year %>%
group_by(Service, Premiere_Year = strtoi(Premiere_Year), Format) %>%
summarise(Entries = length(Service)), Format == "Film" | Format == "Series"))
series_and_movies
percentage_of_series <- function(dataframe) {
series_percentages <- data.frame(Service = c(), Premiere_Year = c(), Series_Percentage = c())
services <- c("Netflix", "Amazon Prime Video", "Hulu", "Disney+")
for (service in services) {
service_rows <- filter(dataframe, Service == service)
for (year in unique(pull(service_rows, Premiere_Year))) {
nr_series <- sum(pull(filter(service_rows, Format == "Series", Premiere_Year == year), Entries))
print(paste("Nr. series:", nr_series))
nr_films <- sum(pull(filter(service_rows, Format == "Film", Premiere_Year == year), Entries))
print(paste("Nr. films:", nr_films))
series_percentages <- rbind(series_percentages,
data.frame(as.factor(c(service)),c(year),c(ifelse(nr_series == 0,
ifelse(nr_films == 0,
50,
0),
ifelse(nr_films == 0,
100,
nr_series / (nr_series + nr_films) * 100)))))
}
}
return(series_percentages)
}
percentage_of_series(series_and_movies)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Film"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Film") +
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Series"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
scale_colour_manual(values = original_colors)
service_netflix <- filter(prem_year, Service != "Netflix")
service_amazon <- filter(prem_year, Service != "Amazon Prime Video")
service_hulu <- filter(prem_year, Service != "Hulu")
service_disney <- filter(prem_year, Service != "Disney+")
# Creating a data frame that groups all the entries by their Service, Release Year
# and their Format
series_and_movies <- as_tibble(filter(prem_year %>%
group_by(Service, Premiere_Year = strtoi(Premiere_Year), Format) %>%
summarise(Entries = length(Service)), Format == "Film" | Format == "Series"))
series_and_movies
percentage_of_series <- function(dataframe) {
series_percentages <- data.frame(Service = c(), Premiere_Year = c(), Series_Percentage = c())
services <- c("Netflix", "Amazon Prime Video", "Hulu", "Disney+")
years <- c(2000:2020)
for (service in services) {
service_rows <- filter(dataframe, Service == service)
for (year in years) {
nr_series <- sum(pull(filter(service_rows, Format == "Series", Premiere_Year == year), Entries))
print(paste("Nr. series:", nr_series))
nr_films <- sum(pull(filter(service_rows, Format == "Film", Premiere_Year == year), Entries))
print(paste("Nr. films:", nr_films))
series_percentages <- rbind(series_percentages,
data.frame(as.factor(c(service)),c(year),c(ifelse(nr_series == 0,
ifelse(nr_films == 0,
50,
0),
ifelse(nr_films == 0,
100,
nr_series / (nr_series + nr_films) * 100)))))
}
}
return(series_percentages)
}
percentage_of_series(series_and_movies)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Film"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Film") +
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Series"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
scale_colour_manual(values = original_colors)
service_netflix <- filter(prem_year, Service != "Netflix")
service_amazon <- filter(prem_year, Service != "Amazon Prime Video")
service_hulu <- filter(prem_year, Service != "Hulu")
service_disney <- filter(prem_year, Service != "Disney+")
# Creating a data frame that groups all the entries by their Service, Release Year
# and their Format
series_and_movies <- as_tibble(filter(prem_year %>%
group_by(Service, Premiere_Year = strtoi(Premiere_Year), Format) %>%
summarise(Entries = length(Service)), Format == "Film" | Format == "Series"))
series_and_movies
percentage_of_series <- function(dataframe) {
series_percentages <- data.frame(Service = c(), Premiere_Year = c(), Series_Percentage = c())
services <- c("Netflix", "Amazon Prime Video", "Hulu", "Disney+")
years <- c(2000:2020)
for (service in services) {
service_rows <- filter(dataframe, Service == service)
for (year in years) {
nr_series <- sum(pull(filter(service_rows, Format == "Series", Premiere_Year == year), Entries))
nr_films <- sum(pull(filter(service_rows, Format == "Film", Premiere_Year == year), Entries))
series_percentages <- rbind(series_percentages,
data.frame(as.factor(c(service)),c(year),c(ifelse(nr_series == 0,
ifelse(nr_films == 0,
50,
0),
ifelse(nr_films == 0,
100,
nr_series / (nr_series + nr_films) * 100)))))
}
}
return(series_percentages)
}
percentage_of_series(series_and_movies)
ggplot() +
geom_line(data = percentage_of_series(series_and_movies), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service))) +
scale_colour_manual(values = original_colors)
service_netflix <- filter(prem_year, Service != "Netflix")
service_amazon <- filter(prem_year, Service != "Amazon Prime Video")
service_hulu <- filter(prem_year, Service != "Hulu")
service_disney <- filter(prem_year, Service != "Disney+")
# Creating a data frame that groups all the entries by their Service, Release Year
# and their Format
series_and_movies <- as_tibble(filter(prem_year %>%
group_by(Service, Premiere_Year = strtoi(Premiere_Year), Format) %>%
summarise(Entries = length(Service)), Format == "Film" | Format == "Series"))
series_and_movies
percentage_of_series <- function(dataframe) {
series_percentages <- data.frame(Service = c(), Premiere_Year = c(), Series_Percentage = c())
services <- c("Netflix", "Amazon Prime Video", "Hulu", "Disney+")
years <- c(2000:2020)
for (service in services) {
service_rows <- filter(dataframe, Service == service)
for (year in years) {
nr_series <- sum(pull(filter(service_rows, Format == "Series", Premiere_Year == year), Entries))
nr_films <- sum(pull(filter(service_rows, Format == "Film", Premiere_Year == year), Entries))
series_percentages <- rbind(series_percentages,
data.frame(Service = as.factor(c(service)), Premiere_Year = c(year), Entries = c(ifelse(nr_series == 0,
ifelse(nr_films == 0,
50,
0),
ifelse(nr_films == 0,
100,
nr_series / (nr_series + nr_films) * 100)))))
}
}
return(series_percentages)
}
percentage_of_series(series_and_movies)
ggplot() +
geom_line(data = percentage_of_series(series_and_movies), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service))) +
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Series"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
scale_colour_manual(values = original_colors)
service_netflix <- filter(prem_year, Service != "Netflix")
service_amazon <- filter(prem_year, Service != "Amazon Prime Video")
service_hulu <- filter(prem_year, Service != "Hulu")
service_disney <- filter(prem_year, Service != "Disney+")
# Creating a data frame that groups all the entries by their Service, Release Year
# and their Format
series_and_movies <- as_tibble(filter(prem_year %>%
group_by(Service, Premiere_Year = strtoi(Premiere_Year), Format) %>%
summarise(Entries = length(Service)), Format == "Film" | Format == "Series"))
series_and_movies
percentage_of_series <- function(dataframe) {
series_percentages <- data.frame(Service = c(), Premiere_Year = c(), Series_Percentage = c())
services <- c("Netflix", "Amazon Prime Video", "Hulu", "Disney+")
years <- c(2000:2020)
for (service in services) {
service_rows <- filter(dataframe, Service == service)
for (year in years) {
nr_series <- sum(pull(filter(service_rows, Format == "Series", Premiere_Year == year), Entries))
nr_films <- sum(pull(filter(service_rows, Format == "Film", Premiere_Year == year), Entries))
series_percentages <- rbind(series_percentages,
data.frame(Service = as.factor(c(service)), Premiere_Year = c(year), Entries = c(ifelse(nr_series == 0,
ifelse(nr_films == 0,
50,
0),
ifelse(nr_films == 0,
100,
nr_series / (nr_series + nr_films) * 100)))))
}
}
return(series_percentages)
}
percentage_of_series(series_and_movies)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Film"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Series"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = percentage_of_series(series_and_movies), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service))) +
scale_colour_manual(values = original_colors)
series_and_movies <- as_tibble(filter(prem_year %>%
group_by(Service, Premiere_Year = strtoi(Premiere_Year), Format) %>%
summarise(Entries = length(Service)), Format == "Film" | Format == "Series"))
series_and_movies
percentage_of_series <- function(dataframe) {
series_percentages <- data.frame(Service = c(), Premiere_Year = c(), Series_Percentage = c())
services <- c("Netflix", "Amazon Prime Video", "Hulu", "Disney+")
years <- c(2000:2020)
for (service in services) {
service_rows <- filter(dataframe, Service == service)
for (year in years) {
nr_series <- sum(pull(filter(service_rows, Format == "Series", Premiere_Year == year), Entries))
nr_films <- sum(pull(filter(service_rows, Format == "Film", Premiere_Year == year), Entries))
series_percentages <- rbind(series_percentages,
data.frame(Service = as.factor(c(service)), Premiere_Year = c(year), Entries = c(ifelse(nr_series == 0,
ifelse(nr_films == 0,
50,
0),
ifelse(nr_films == 0,
100,
nr_series / (nr_series + nr_films) * 100)))))
}
}
return(series_percentages)
}
percentage_of_series(series_and_movies)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Film"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Series"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = percentage_of_series(series_and_movies), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service))) +
scale_colour_manual(values = original_colors)
series_and_movies <- as_tibble(filter(prem_year %>%
group_by(Service, Premiere_Year = strtoi(Premiere_Year), Format) %>%
summarise(Entries = length(Service)), Format == "Film" | Format == "Series"))
series_and_movies
percentage_of_series <- function(dataframe) {
series_percentages <- data.frame(Service = c(), Premiere_Year = c(), Series_Percentage = c())
services <- c("Netflix", "Amazon Prime Video", "Hulu", "Disney+")
years <- c(2000:2020)
for (service in services) {
service_rows <- filter(dataframe, Service == service)
for (year in years) {
nr_series <- sum(pull(filter(service_rows, Format == "Series", Premiere_Year == year), Entries))
nr_films <- sum(pull(filter(service_rows, Format == "Film", Premiere_Year == year), Entries))
series_percentages <- rbind(series_percentages,
data.frame(Service = as.factor(c(service)), Premiere_Year = c(year), Percentage = c(ifelse(nr_series == 0,
ifelse(nr_films == 0,
50,
0),
ifelse(nr_films == 0,
100,
nr_series / (nr_series + nr_films) * 100)))))
}
}
return(series_percentages)
}
percentage_of_series(series_and_movies)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Film"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Series"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = percentage_of_series(series_and_movies), mapping = aes(x = Premiere_Year, y = Percentage, colour = as.factor(Service))) +
scale_colour_manual(values = original_colors)
series_and_movies <- as_tibble(filter(prem_year %>%
group_by(Service, Premiere_Year = strtoi(Premiere_Year), Format) %>%
summarise(Entries = length(Service)), Format == "Film" | Format == "Series"))
series_and_movies
percentage_of_series <- function(dataframe) {
series_percentages <- data.frame(Service = c(), Premiere_Year = c(), Series_Percentage = c())
services <- c("Netflix", "Amazon Prime Video", "Hulu", "Disney+")
years <- c(2000:2020)
for (service in services) {
service_rows <- filter(dataframe, Service == service)
for (year in years) {
nr_series <- sum(pull(filter(service_rows, Format == "Series", Premiere_Year == year), Entries))
nr_films <- sum(pull(filter(service_rows, Format == "Film", Premiere_Year == year), Entries))
series_percentages <- rbind(series_percentages,
data.frame(Service = as.factor(c(service)), Premiere_Year = c(year), Percentage = c(ifelse(nr_series == 0,
ifelse(nr_films == 0,
50,
0),
ifelse(nr_films == 0,
100,
nr_series / (nr_series + nr_films) * 100)))))
}
}
return(series_percentages)
}
percentage_of_series(series_and_movies)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Film"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
labs(fill = "Premiere Month", title = "Release Months", x = "Release Month", y = "Number of movies and series")
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Series"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
labs(fill = "Premiere Month", title = "Release Months", x = "Release Month", y = "Number of movies and series")
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = percentage_of_series(series_and_movies), mapping = aes(x = Premiere_Year, y = Percentage, colour = as.factor(Service))) +
labs(fill = "Series Ratio", title = "Ratio of series to movies", x = "Year", y = "% of series")
scale_colour_manual(values = original_colors)
series_and_movies <- as_tibble(filter(prem_year %>%
group_by(Service, Premiere_Year = strtoi(Premiere_Year), Format) %>%
summarise(Entries = length(Service)), Format == "Film" | Format == "Series"))
series_and_movies
percentage_of_series <- function(dataframe) {
series_percentages <- data.frame(Service = c(), Premiere_Year = c(), Series_Percentage = c())
services <- c("Netflix", "Amazon Prime Video", "Hulu", "Disney+")
years <- c(2000:2020)
for (service in services) {
service_rows <- filter(dataframe, Service == service)
for (year in years) {
nr_series <- sum(pull(filter(service_rows, Format == "Series", Premiere_Year == year), Entries))
nr_films <- sum(pull(filter(service_rows, Format == "Film", Premiere_Year == year), Entries))
series_percentages <- rbind(series_percentages,
data.frame(Service = as.factor(c(service)), Premiere_Year = c(year), Percentage = c(ifelse(nr_series == 0,
ifelse(nr_films == 0,
50,
0),
ifelse(nr_films == 0,
100,
nr_series / (nr_series + nr_films) * 100)))))
}
}
return(series_percentages)
}
percentage_of_series(series_and_movies)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Film"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
labs(fill = "Premiere Month", title = "Release Months", x = "Release Month", y = "Number of movies and series")
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Series"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
labs(fill = "Premiere Month", title = "Release Months", x = "Release Month", y = "Number of movies and series")
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = percentage_of_series(series_and_movies), mapping = aes(x = Premiere_Year, y = Percentage, colour = as.factor(Service))) +
labs(colour = "Series Ratio", title = "Ratio of series to movies", x = "Year", y = "% of series")
scale_colour_manual(values = original_colors)
series_and_movies <- as_tibble(filter(prem_year %>%
group_by(Service, Premiere_Year = strtoi(Premiere_Year), Format) %>%
summarise(Entries = length(Service)), Format == "Film" | Format == "Series"))
series_and_movies
percentage_of_series <- function(dataframe) {
series_percentages <- data.frame(Service = c(), Premiere_Year = c(), Series_Percentage = c())
services <- c("Netflix", "Amazon Prime Video", "Hulu", "Disney+")
years <- c(2000:2020)
for (service in services) {
service_rows <- filter(dataframe, Service == service)
for (year in years) {
nr_series <- sum(pull(filter(service_rows, Format == "Series", Premiere_Year == year), Entries))
nr_films <- sum(pull(filter(service_rows, Format == "Film", Premiere_Year == year), Entries))
series_percentages <- rbind(series_percentages,
data.frame(Service = as.factor(c(service)), Premiere_Year = c(year), Percentage = c(ifelse(nr_series == 0,
ifelse(nr_films == 0, 50, 0), ifelse(nr_films == 0, 100, nr_series / (nr_series + nr_films) * 100)))))
}
}
return(series_percentages)
}
percentage_of_series(series_and_movies)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Film"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
labs(colour = "Premiere Month", title = "Release Months", x = "Release Month", y = "Number of movies and series")
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Series"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
labs(colour = "Premiere Month", title = "Release Months", x = "Release Month", y = "Number of movies and series")
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = percentage_of_series(series_and_movies), mapping = aes(x = Premiere_Year, y = Percentage, colour = as.factor(Service))) +
labs(colour = "Streaming Services", title = "Ratio of series to movies", x = "Year", y = "% of series")
scale_colour_manual(values = original_colors)
series_and_movies <- as_tibble(filter(prem_year %>%
group_by(Service, Premiere_Year = strtoi(Premiere_Year), Format) %>%
summarise(Entries = length(Service)), Format == "Film" | Format == "Series"))
series_and_movies
percentage_of_series <- function(dataframe) {
series_percentages <- data.frame(Service = c(), Premiere_Year = c(), Series_Percentage = c())
services <- c("Netflix", "Amazon Prime Video", "Hulu", "Disney+")
years <- c(2000:2020)
for (service in services) {
service_rows <- filter(dataframe, Service == service)
for (year in years) {
nr_series <- sum(pull(filter(service_rows, Format == "Series", Premiere_Year == year), Entries))
nr_films <- sum(pull(filter(service_rows, Format == "Film", Premiere_Year == year), Entries))
series_percentages <- rbind(series_percentages,
data.frame(Service = as.factor(c(service)), Premiere_Year = c(year), Percentage = c(ifelse(nr_series == 0,
ifelse(nr_films == 0, 50, 0), ifelse(nr_films == 0, 100, nr_series / (nr_series + nr_films) * 100)))))
}
}
return(series_percentages)
}
percentage_of_series(series_and_movies)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Film"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
labs(colour = "Streaming Services", title = "Release Movies by streaming services", x = "Year", y = "Number of movies")
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Series"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
labs(colour = "Streaming Services", title = "Release Series by streaming services", x = "Year", y = "Number of series")
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = percentage_of_series(series_and_movies), mapping = aes(x = Premiere_Year, y = Percentage, colour = as.factor(Service))) +
labs(colour = "Streaming Services", title = "Ratio of series to movies", x = "Year", y = "% of series")
scale_colour_manual(values = original_colors)
series_and_movies <- as_tibble(filter(prem_year %>%
group_by(Service, Premiere_Year = strtoi(Premiere_Year), Format) %>%
summarise(Entries = length(Service)), Format == "Film" | Format == "Series"))
series_and_movies
percentage_of_series <- function(dataframe) {
series_percentages <- data.frame(Service = c(), Premiere_Year = c(), Series_Percentage = c())
services <- c("Netflix", "Amazon Prime Video", "Hulu", "Disney+")
years <- c(2000:2020)
for (service in services) {
service_rows <- filter(dataframe, Service == service)
for (year in years) {
nr_series <- sum(pull(filter(service_rows, Format == "Series", Premiere_Year == year), Entries))
nr_films <- sum(pull(filter(service_rows, Format == "Film", Premiere_Year == year), Entries))
series_percentages <- rbind(series_percentages,
data.frame(Service = as.factor(c(service)), Premiere_Year = c(year), Percentage = c(ifelse(nr_series == 0,
ifelse(nr_films == 0, 50, 0), ifelse(nr_films == 0, 100, nr_series / (nr_series + nr_films) * 100)))))
}
}
return(series_percentages)
}
percentage_of_series(series_and_movies)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Film"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
labs(colour = "Streaming Services", title = "Release Movies by streaming services", x = "Year", y = "Number of movies")
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Series"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
labs(colour = "Streaming Services", title = "Release Series by streaming services", x = "Year", y = "Number of series")
scale_colour_manual(values = original_colors)
ggplot() +
geom_smooth(data = percentage_of_series(series_and_movies), mapping = aes(x = Premiere_Year, y = Percentage, colour = as.factor(Service))) +
labs(colour = "Streaming Services", title = "Ratio of series to movies", x = "Year", y = "% of series")
scale_colour_manual(values = original_colors)
series_and_movies <- as_tibble(filter(prem_year %>%
group_by(Service, Premiere_Year = strtoi(Premiere_Year), Format) %>%
summarise(Entries = length(Service)), Format == "Film" | Format == "Series"))
series_and_movies
percentage_of_series <- function(dataframe) {
series_percentages <- data.frame(Service = c(), Premiere_Year = c(), Series_Percentage = c())
services <- c("Netflix", "Amazon Prime Video", "Hulu", "Disney+")
years <- c(2000:2020)
for (service in services) {
service_rows <- filter(dataframe, Service == service)
for (year in years) {
nr_series <- sum(pull(filter(service_rows, Format == "Series", Premiere_Year == year), Entries))
nr_films <- sum(pull(filter(service_rows, Format == "Film", Premiere_Year == year), Entries))
series_percentages <- rbind(series_percentages,
data.frame(Service = as.factor(c(service)), Premiere_Year = c(year), Percentage = c(ifelse(nr_series == 0,
ifelse(nr_films == 0, 50, 0), ifelse(nr_films == 0, 100, nr_series / (nr_series + nr_films) * 100)))))
}
}
return(series_percentages)
}
percentage_of_series(series_and_movies)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Film"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
labs(colour = "Streaming Services", title = "Release Movies by streaming services", x = "Year", y = "Number of movies")
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = filter(series_and_movies, Format == "Series"), mapping = aes(x = Premiere_Year, y = Entries, colour = as.factor(Service)), label = "Movie") +
labs(colour = "Streaming Services", title = "Release Series by streaming services", x = "Year", y = "Number of series")
scale_colour_manual(values = original_colors)
ggplot() +
geom_line(data = percentage_of_series(series_and_movies), mapping = aes(x = Premiere_Year, y = Percentage, colour = as.factor(Service))) +
labs(colour = "Streaming Services", title = "Ratio of series to movies", x = "Year", y = "% of series")
scale_colour_manual(values = original_colors)
